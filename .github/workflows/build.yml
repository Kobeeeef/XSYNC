name: Build XSync

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        platform: [linux-x64, linux-arm, windows-x64]

    runs-on: ${{ matrix.platform == 'windows-x64' && 'windows-latest' || 'ubuntu-latest' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up dependencies
        shell: bash
        run: |
          if [ "${{ matrix.platform }}" == "linux-x64" ] || [ "${{ matrix.platform }}" == "linux-arm" ]; then
            sudo apt-get update && sudo apt-get install -y build-essential cmake libzmq3-dev
          fi
          if [ "${{ matrix.platform }}" == "windows-x64" ]; then
            choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          fi

      - name: Configure and Build
        shell: bash
        run: |
          if [ "${{ matrix.platform }}" == "linux-x64" ] || [ "${{ matrix.platform }}" == "linux-arm" ]; then
            mkdir build && cd build
            cmake .. -DCMAKE_BUILD_TYPE=Release
            cmake --build .
          fi
          if [ "${{ matrix.platform }}" == "windows-x64" ]; then
            mkdir build && cd build
            cmake .. -G "Visual Studio 16 2019" -A x64
            cmake --build . --config Release
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-build
          path: |
            build/XSyncClient${{ matrix.platform == 'windows-x64' && '.exe' || '' }}
            build/XSyncServer${{ matrix.platform == 'windows-x64' && '.exe' || '' }}
